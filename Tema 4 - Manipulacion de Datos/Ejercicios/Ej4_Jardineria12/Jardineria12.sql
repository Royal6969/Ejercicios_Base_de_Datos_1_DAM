CONNECT JARDINERIA12;

@C:\jardineria.sql;

-----------------------------------------------------------------------

-------------------------- Multitabla ----------------------------

-- 1.	Sacar un listado con el nombre de cada cliente y el nombre y apellido de su representante de ventas.

SELECT CLIENTES.NOMBRECLIENTE, EMPLEADOS.NOMBRE, EMPLEADOS.APELLIDO1
FROM CLIENTES, EMPLEADOS
WHERE CLIENTES.CODIGOEMPLEADOREPVENTAS = EMPLEADOS.CODIGOEMPLEADO;

-- 2.	Sacar un listado con el nombre de cada cliente y el nombre de su representante y la oficina a la que pertenece dicho representante

SELECT CLIENTES.NOMBRECLIENTE, EMPLEADOS.NOMBRE, EMPLEADOS.CODIGOOFICINA
FROM CLIENTES, EMPLEADOS, OFICINAS
WHERE CLIENTES,CODIGOEMPLEADOREPVENTAS = EMPLEADOS.CODIGOEMPLEADO
AND EMPLEADOS.CODIGOOFICINA = 

--este lo tenia mal y tengo que corregirlo

-- 3.	Listar las ventas totales de los productos que hayan facturado más de 3000 euros. Se mostrará el nombre, unidades vendidas y total facturado

SELECT PRODUCTOS.NOMBRE, DETALLEPEDIDOS.CANTIDAD, (DETALLEPEDIDOS.CANTIDAD * DETALLEPEDIDOS.PRECIOUNIDAD) AS "VENTASTOTALES"
FROM PRODUCTOS, DETALLEPEDIDOS
WHERE DETALLEPEDIDOS.CODIGOPRODUCTO = PRODUCTOS.CODIGOPRODUCTO 
AND (DETALLEPEDIDOS.CANTIDAD * DETALLEPEDIDOS.PRECIOUNIDAD) > 3000; 

-- lo suyo sería un group by 

SELECT PRODUCTOS.NOMBRE, SUM(DETALLEPEDIDOS.CANTIDAD), SUM(DETALLEPEDIDOS.CANTIDAD * DETALLEPEDIDOS.PRECIOUNIDAD) AS "VENTASTOTALES"
FROM PRODUCTOS, DETALLEPEDIDOS
WHERE DETALLEPEDIDOS.CODIGOPRODUCTO = PRODUCTOS.CODIGOPRODUCTO 
GROUP BY PRODUCTOS.NOMBRE
HAVING SUM(DETALLEPEDIDOS.CANTIDAD * DETALLEPEDIDOS.PRECIOUNIDAD) > 3000;

-- 4.	Listar la dirección de las oficinas que tengan clientes en Fuenlabrada.

SELECT OFICINAS.LINEADIRECCION1 --aqui faltó un distinct
FROM OFICINAS, CLIENTES, EMPLEADOS
WHERE CLIENTES.CODIGOEMPLEADOREPVENTAS = EMPLEADOS.CODIGOEMPLEADO AND EMPLEADOS.CODIGOOFICINA = OFICINAS.CODIGOOFICINA
AND CLIENTES.CIUDAD = 'Fuenlabrada';

-- 5.	Obtener un listado con los nombres de los empleados más los nombres de sus jefes
-- la reflexiva

SELECT e.NOMBRE, j.NOMBRE AS JEFE
FROM EMPLEADOS e, EMPLEADOS j
WHERE  j.CODIGOEMPLEADO = e.CODIGOJEFE;

-- 6.	Obtener el nombre de los clientes a los que no se les ha entregados a tiempo un pedido

SELECT CLIENTES.NOMBRECLIENTE --DISTINCT
FROM CLIENTES, PEDIDOS
WHERE PEDIDOS.CODIGOCLIENTE = CLIENTES.CODIGOCLIENTE
AND PEDIDOS.FECHAESPERADA < PEDIDOS.FECHAENTREGA;

-----------------------------------------------------------------------------------------------

----------------------------- Funciones agrupadas --------------------------------------

-- 7.	Obtener el código de oficina y la ciudad donde hay oficinas.

SELECT OFICINAS.CODIGOOFICINA, OFICINAS.CIUDAD
FROM OFICINAS;
--GROUP BY OFICINAS.CODIGOOFICINA, OFICINAS.CIUDAD;

--- QUE PASA CON ESTOOOOOO

-- 8.	Sacar cuántos empleados hay en la compañía

SELECT EMPLEADOS.CODIGOOFICINA, COUNT(*)
FROM EMPLEADOS
GROUP BY EMPLEADOS.CODIGOOFICINA;

-- en realidad no se pide exactamente esto, sino que del tirón aparezca el recuento de empleados y ya está

-- 9.	Sacar cuántos clientes tiene cada país

SELECT CLIENTES.PAIS, COUNT(*)
FROM CLIENTES
GROUP BY CLIENTES.PAIS;

-- 10.	Sacar cuál fue el pago medio en 2009 (PISTA: usar la función YEAR de MySql)

SELECT AVG(PAGOS.CANTIDAD)
FROM PAGOS
WHERE EXTRACT(YEAR FROM(PAGOS.FECHAPAGO)) = '2009';
-- WHERE PAGOS.FECHAPAGO BETWEEN '2009-01-01' AND '2009-12-31'; 

----- Solucion FRAN

ALTER SESSION SET nls_date_format = 'DD-MM-YYYY';

SELECT *
FROM PAGOS
WHERE EXTRACT(YEAR FROM(PAGOS.FECHAPAGO)) = '2009';

-- 11.	Sacar cuántos pedidos están en cada estado ordenado descendentemente por el número de pedido

SELECT UPPER(PEDIDOS.ESTADO), COUNT(*) -- OJITO con el UPPER
FROM PEDIDOS
GROUP BY UPPER(PEDIDOS.ESTADO) -- OJITO con el UPPER
ORDER BY COUNT(*) DESC; --OJITO con esto

-- 12.	Sacar el precio más caro y el más barato de los productos

SELECT MAX(PRODUCTOS.PRECIOVENTA), MIN(PRODUCTOS.PRECIOVENTA)
FROM PRODUCTOS;

-- solucion alternativa / opción PRO

SELECT NOMBRE, PRECIOVENTA
FROM PRODUCTOS 
WHERE PRECIOVENTA= ( SELECT MIN(PRECIOVENTA) FROM PRODUCTOS) 
OR PRECIOVENTA=(SELECT MAX(PRECIOVENTA) FROM PRODUCTOS
);

-- 13.	Obtener las gamas de productos que tengan más de 100 productos  (en la tabla productos)

SELECT PRODUCTOS.GAMA, COUNT(*) AS "nº de productos"
FROM PRODUCTOS
GROUP BY PRODUCTOS.GAMA
HAVING COUNT(*) > 100; 

-- 14.	Obtener el precio medio de proveedor de PRODUCTOS agrupando por proveedor de los proveedores que no empiecen por M y visualizando sólo los que la media es mayor de 15. 

SELECT PRODUCTOS.PROVEEDOR, AVG(PRODUCTOS.PRECIOPROVEEDOR)
FROM PRODUCTOS
WHERE PRODUCTOS.PROVEEDOR NOT LIKE 'M%'
GROUP BY PRODUCTOS.PROVEEDOR
HAVING AVG(PRODUCTOS.PRECIOPROVEEDOR) > 15;

--------------------- CONSULTAS VARIADAS ---------------------------

-- 15.	Listado de los clientes indicando el nombre y cuántos pedidos han realizado

SELECT CLIENTES.NOMBRECLIENTE, COUNT(PEDIDOS.CODIGOPEDIDO)
FROM CLIENTES, PEDIDOS, DETALLEPEDIDOS
WHERE PEDIDOS.CODIGOPEDIDO = DETALLEPEDIDOS.CODIGOPEDIDO AND PEDIDOS.CODIGOCLIENTE = CLIENTES.CODIGOCLIENTE
GROUP BY CLIENTES.NOMBRECLIENTE;

-- 16.	Sacar un litado con los clientes y el total pagado por cada uno de ellos

SELECT CLIENTES.NOMBRECLIENTE, SUM(PAGOS.CANTIDAD)
FROM CLIENTES, PAGOS
WHERE PAGOS.CODIGOCLIENTE = CLIENTES.CODIGOCLIENTE
GROUP BY CLIENTES.NOMBRECLIENTE;

-- 17.	Nombre de los clientes que hayan hecho pedidos en 2008

ALTER SESSION SET nls_date_format = 'DD-MM-YYYY';

SELECT CLIENTES.NOMBRECLIENTE, PEDIDOS.FECHAPEDIDO
FROM CLIENTES, PEDIDOS
WHERE PEDIDOS.CODIGOCLIENTE = CLIENTES.CODIGOCLIENTE
AND  EXTRACT(YEAR FROM(PEDIDOS.FECHAPEDIDO)) = '2008'
--AND PEDIDOS.FECHAPEDIDO BETWEEN '08-01-01' AND '08-12-31' 
GROUP BY CLIENTES.NOMBRECLIENTE, PEDIDOS.FECHAPEDIDO;

-- 18.	Listar el nombre de cliente y nombre y apellido de sus representantes de aquellos clientes que no hayan realizado pagos

SELECT DISTINCT CLIENTES.NOMBRECLIENTE, EMPLEADOS.NOMBRE, EMPLEADOS.APELLIDO1
FROM CLIENTES, EMPLEADOS, PAGOS
WHERE CLIENTES.CODIGOEMPLEADOREPVENTAS = EMPLEADOS.CODIGOEMPLEADO --AND PAGOS.CODIGOCLIENTE = CLIENTES.CODIGOCLIENTE
AND CLIENTES.CODIGOCLIENTE NOT IN PAGOS.CODIGOCLIENTE; -- EL IN/NOT N ya sirve como una unión

--solución corregida

SELECT DISTINCT CLIENTES.NOMBRECLIENTE, EMPLEADOS.NOMBRE, EMPLEADOS.APELLIDO1
FROM CLIENTES, EMPLEADOS
WHERE CLIENTES.CODIGOEMPLEADOREPVENTAS = EMPLEADOS.CODIGOEMPLEADO AND PAGOS.CODIGOCLIENTE = CLIENTES.CODIGOCLIENTE
AND CLIENTES.CODIGOCLIENTE NOT IN (

SELECT PAGOS.CODIGOCLIENTE
FROM PAGOS
); --tendrían que salir unas 15 o 17 filas

-- 19.	Sacar un listado de los clientes donde aparezca el nombre de su comercial y la ciudad donde está su oficina

SELECT CLIENTES.NOMBRECLIENTE, EMPLEADOS.NOMBRE, OFICINAS.CIUDAD
FROM CLIENTES, EMPLEADOS, OFICINAS
WHERE CLIENTES.CODIGOEMPLEADOREPVENTAS = EMPLEADOS.CODIGOEMPLEADO AND EMPLEADOS.CODIGOOFICINA = OFICINAS.CODIGOOFICINA;

-- 20.	Sacar el nombre, apellidos, oficina y cargo de aquellos empleados que no sean representantes de ventas

SELECT EMPLEADOS.NOMBRE, EMPLEADOS.APELLIDO1, EMPLEADOS.APELLIDO2, EMPLEADOS.CODIGOOFICINA, EMPLEADOS.PUESTO
FROM EMPLEADOS
--WHERE EMPLEADOS.CODIGOEMPLEADO NOT IN CLIENTES.CODIGOEMPLEADOREPVENTAS;
WHERE EMPLEADOS.PUESTO NOT LIKE 'Representante Ventas';

-- 21.	Sacar cuántos empleados tiene cada oficina, mostrando el nombre de la ciudad donde está la oficina

SELECT OFICINAS.CIUDAD, COUNT(*)
FROM OFICINAS, EMPLEADOS
WHERE EMPLEADOS.CODIGOOFICINA = OFICINAS.CODIGOOFICINA
GROUP BY OFICINAS.CIUDAD;

-- 22.	Sacar el nombre, apellido, oficina(ciudad) y cargo del empleado que no represente a ningún cliente

SELECT DISTINCT EMPLEADOS.NOMBRE, EMPLEADOS.APELLIDO1, OFICINAS.CIUDAD, EMPLEADOS.PUESTO
FROM EMPLEADOS, OFICINAS
WHERE EMPLEADOS.CODIGOOFICINA = OFICINAS.CODIGOOFICINA
AND EMPLEADOS.CODIGOEMPLEADO NOT IN (

SELECT DISTINCT CLIENTES.CODIGOEMPLEADOREPVENTAS
FROM CLIENTES
WHERE CLIENTES.CODIGOEMPLEADOREPVENTAS IS NOT NULL
);

-- 23.	Sacar la media de unidades en stock de los productos agrupados por gamas

SELECT PRODUCTOS.GAMA, AVG(PRODUCTOS.CANTIDADENSTOCK)
FROM PRODUCTOS
GROUP BY PRODUCTOS.GAMA;

-- 24.	Sacar un listado de los clientes que residen en la misma ciudad donde hay oficina, indicando dónde está la oficina

SELECT CLIENTES.NOMBRECLIENTE, CLIENTES.CIUDAD, OFICINAS.CIUDAD
FROM CLIENTES, OFICINAS, EMPLEADOS
WHERE CLIENTES.CODIGOEMPLEADOREPVENTAS = EMPLEADOS.CODIGOEMPLEADO AND EMPLEADOS.CODIGOOFICINA = OFICINAS.CODIGOOFICINA
AND CLIENTES.CIUDAD = OFICINAS.CIUDAD;

-- 25.	Sacar los clientes que residan en ciudades donde no hay oficinas ordenado por la ciudad donde residen

SELECT DISTINCT CLIENTES.NOMBRECLIENTE, CLIENTES.CIUDAD
FROM CLIENTES
WHERE CLIENTES.CIUDAD NOT IN (

SELECT OFICINAS.CIUDAD
FROM OFICINAS
);

-- 26.	Sacar el número de clientes que tienen asignados cada representante de ventas

SELECT EMPLEADOS.NOMBRE, COUNT(CLIENTES.CODIGOCLIENTE)
FROM CLIENTES, EMPLEADOS
WHERE CLIENTES.CODIGOEMPLEADOREPVENTAS = EMPLEADOS.CODIGOEMPLEADO
AND EMPLEADOS.PUESTO = 'Representante Ventas'
GROUP BY EMPLEADOS.NOMBRE;

-- 27.	Sacar el cliente que hizo el pago con mayor cuantía y el que hizo el pago con menor cuantía

SELECT MAXIMO.NOMBRECLIENTE, MINIMO.NOMBRECLIENTE
FROM CLIENTES MAXIMO, CLIENTES MINIMO
WHERE MAXIMO.CODIGOCLIENTE = (

SELECT CLIENTES.CODIGOCLIENTE FROM CLIENTES, PAGOS
WHERE CLIENTES.CODIGOCLIENTE = PAGOS.CODIGOCLIENTE
ORDER BY PAGOS.CANTIDAD DESC
FETCH FIRST 1 ROWS ONLY)
AND MINIMO.CODIGOCLIENTE = (

SELECT CLIENTES.CODIGOCLIENTE FROM CLIENTES, PAGOS
WHERE CLIENTES.CODIGOCLIENTE = PAGOS.CODIGOCLIENTE
ORDER BY PAGOS.CANTIDAD ASC
FETCH FIRST 1 ROWS ONLY
);

-- otra solucion

SELECT CLIENTES.NOMBRECLIENTE, PAGOS.CANTIDAD
FROM CLIENTES, PAGOS
WHERE PAGOS.CODIGOCLIENTE = CLIENTES.CODIGOCLIENTE 
AND (PAGOS.CANTIDAD = (

SELECT MIN(PAGOS.CANTIDAD) 
FROM PAGOS
)

OR PAGOS.CANTIDAD = (

SELECT MAX(PAGOS.CANTIDAD)
FROM PAGOS
)
);


-- 28.	Sacar un listado con el precio total de cada pedido

SELECT DETALLEPEDIDOS.CODIGOPEDIDO, SUM(DETALLEPEDIDOS.CANTIDAD * DETALLEPEDIDOS.PRECIOUNIDAD)
FROM DETALLEPEDIDOS
GROUP BY DETALLEPEDIDOS.CODIGOPEDIDO;

-- 29.	Sacar los clientes que hayan hecho pedidos en el 2008 por una cuantía superior a 2000 euros

SELECT DISTINCT CLIENTES.NOMBRECLIENTE, PEDIDOS.FECHAPEDIDO, (DETALLEPEDIDOS.CANTIDAD * DETALLEPEDIDOS.PRECIOUNIDAD)
FROM CLIENTES, PEDIDOS, DETALLEPEDIDOS
WHERE CLIENTES.CODIGOCLIENTE = PEDIDOS.CODIGOCLIENTE AND DETALLEPEDIDOS.CODIGOPEDIDO = PEDIDOS.CODIGOPEDIDO
AND EXTRACT(YEAR FROM(PEDIDOS.FECHAPEDIDO)) = '2008'
AND (DETALLEPEDIDOS.CANTIDAD * DETALLEPEDIDOS.PRECIOUNIDAD) > 2000;

-- 30.	Sacar cuantos pedidos tiene cada cliente en cada estado --este no lo tenía hecho, lo hice con la correción de clase

SELECT CLIENTES.CODIGOCLIENTE, PEDIDOS.ESTADO, COUNT(*) AS CANTIDAD
FROM CLIENTES, PEDIDOS
WHERE CLIENTES.CODIGOCLIENTE = PEDIDOS.CODIGOCLIENTE
GROUP BY CLIENTES.CODIGOCLIENTE, PEDIDOS.ESTADO
ORDER BY CLIENTES.CODIGOCLIENTE ASC;

-- 31.	Sacar los clientes que han pedido más de 200 unidades de cualquier producto --este no lo tenía hecho, lo hice con la correción de clase

SELECT CLIENTES.NOMBRECLIENTE, SUM(DETALLEPEDIDOS.CANTIDAD)
FROM CLIENTES, DETALLEPEDIDOS, PEDIDOS
WHERE DETALLEPEDIDOS.CODIGOPEDIDO = PEDIDOS.CODIGOPEDIDO AND PEDIDOS.CODIGOCLIENTE = CLIENTES.CODIGOCLIENTE
HAVING  SUM(DETALLEPEDIDOS.CANTIDAD) > 200
GROUP BY CLIENTES.NOMBRECLIENTE, DETALLEPEDIDOS.CANTIDAD
ORDER BY DETALLEPEDIDOS.CANTIDAD DESC;

-- solucion fran

SELECT clientes.nombrecliente,SUM( detallepedidos.cantidad)
FROM clientes, detallepedidos, pedidos
WHERE clientes.codigocliente=pedidos.codigocliente
AND pedidos.codigopedido=detallepedidos.codigopedido
GROUP BY clientes.nombrecliente
HAVING SUM(detallepedidos.cantidad) >200
ORDER BY clientes.nombrecliente,SUM( detallepedidos.cantidad) DESC;

-------------------- Subconsultas ------------------------------

-- 32.	Obtener el nombre de cliente con mayor límite de crédito

SELECT CLIENTES.NOMBRECLIENTE, CLIENTES.LIMITECREDITO
FROM CLIENTES
WHERE CLIENTES.LIMITECREDITO = (

SELECT MAX(CLIENTES.LIMITECREDITO)
FROM CLIENTES
);

-- 33.	Obtener el nombre, apellido1 y cargo de los empleados que no representen a ningún cliente

SELECT DISTINCT EMPLEADOS.NOMBRE, EMPLEADOS.APELLIDO1, EMPLEADOS.PUESTO
FROM EMPLEADOS
WHERE EMPLEADOS.CODIGOEMPLEADO NOT IN (

SELECT DISTINCT CLIENTES.CODIGOEMPLEADOREPVENTAS
FROM CLIENTES
);

-- 34.	Obtener el nombre del producto más caro

SELECT PRODUCTOS.NOMBRE
FROM PRODUCTOS
WHERE PRODUCTOS.PRECIOVENTA = (

SELECT MAX(PRODUCTOS.PRECIOVENTA)
FROM PRODUCTOS
);

-- 35.	Obtener el nombre del producto del que más unidades se hayan vendido en un mismo pedido

SELECT PRODUCTOS.NOMBRE
FROM PRODUCTOS, DETALLEPEDIDOS
WHERE DETALLEPEDIDOS.CODIGOPRODUCTO = PRODUCTOS.CODIGOPRODUCTO 
AND DETALLEPEDIDOS.CANTIDAD = (

SELECT MAX(DETALLEPEDIDOS.CANTIDAD)
FROM DETALLEPEDIDOS
);

-- 36.	Obtener los clientes cuya línea de crédito sea mayor que los pagos que haya realizado

SELECT CLIENTES.NOMBRECLIENTE, CLIENTES.LIMITECREDITO
FROM CLIENTES
WHERE CLIENTES.LIMITECREDITO > (

SELECT  CLIENTES.NOMBRECLIENTE, SUM(PAGOS.CANTIDAD)
FROM CLIENTES, PAGOS
WHERE PAGOS.CODIGOCLIENTE = CLIENTES.CODIGOCLIENTE;
GROUP BY CLIENTES.NOMBRECLIENTE;

--solucion fran

SELECT CLIENTES.NOMBRECLIENTE, CLIENTES.LIMITECREDITO
FROM CLIENTES, (select max(limitecredito) from clientes) cl
WHERE CLIENTES.LIMITECREDITO > (
SELECT SUM(PAGOS.CANTIDAD)
 FROM PAGOS
WHERE PAGOS.CODIGOCLIENTE = CLIENTES.CODIGOCLIENTE
--GROUP BY CLIENTES.NOMBRECLIENTE
);

-- 37.	Sacar el producto que más unidades tiene en stock y el que menos unidades tiene en stock

SELECT MAXIMO.CANTIDADENSTOCK, MINIMO.CANTIDADENSTOCK
FROM PRODUCTOS MAXIMO, PRODUCTOS MINIMO
WHERE MAXIMO.CODIGOPRODUCTO = 
(SELECT PRODUCTOS.CODIGOPRODUCTO FROM PRODUCTOS
WHERE CLIENTES.CODIGOCLIENTE = PAGOS.CODIGOCLIENTE
ORDER BY PAGOS.CANTIDAD DESC
FETCH FIRST 1 ROWS ONLY)
AND MINIMO.CODIGOCLIENTE = 
(SELECT CLIENTES.CODIGOCLIENTE FROM CLIENTES, PAGOS
WHERE CLIENTES.CODIGOCLIENTE = PAGOS.CODIGOCLIENTE
ORDER BY PAGOS.CANTIDAD ASC
FETCH FIRST 1 ROWS ONLY);

-- este no está bien
-- empecé rellenando un copia-pega del 27 pero no lo he acabado


-------------- Consultas Resumen ---------------------------
-- 38.	Obtener el código de oficina y la ciudad donde hay oficinas.

SELECT OFICINAS.CODIGOOFICINA, OFICINAS.CIUDAD
FROM OFICINAS;

-- 39.	Sacar cuántos empleados hay en la compañía

SELECT COUNT(*)
FROM EMPLEADOS;

-- 40.	Sacar cuántos clientes tiene cada país

SELECT CLIENTES.PAIS, COUNT(*)
FROM CLIENTES
GROUP BY CLIENTES.PAIS;

-- 41.	Sacar cuál fue el pago medio en 2009 (PISTA: usar la función YEAR de MySql)

-- este apartado es exactamente idéntico al apartado 10

-- 42.	Sacar cuántos pedidos están en cada estado ordenado descendentemente por el número de pedido

SELECT PEDIDOS.CODIGOPEDIDO, PEDIDOS.ESTADO, COUNT(*)
FROM PEDIDOS
GROUP BY PEDIDOS.CODIGOPEDIDO, PEDIDOS.ESTADO
ORDER BY PEDIDOS.CODIGOPEDIDO DESC;

43.	Sacar el precio más caro y el más barato de los productos
44.	Obtener las gamas de productos que tengan más de 100 productos (en la tabla productos)
45.	Obtener el precio medio de proveedor de PRODUCTOS agrupando por proveedor de los proveedores que no empiecen por M y visualizando sólo los que la media es mayor de 15. 


